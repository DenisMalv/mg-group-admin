{"version":3,"file":"static/js/922.32265155.chunk.js","mappings":"0JAGA,MAWA,EAXa,IAAiB,IAAhB,SAACA,GAAc,EAG3B,OACE,eAAIC,UAAU,OAAd,SACGD,KCRA,SAASE,EAAgBC,GAE5B,MAAMC,EAAO,IAAIC,KAAKF,GAGhBG,EAAMC,OAAOH,EAAKI,cAAcC,SAAS,EAAG,KAC5CC,EAAQH,OAAOH,EAAKO,cAAgB,GAAGF,SAAS,EAAG,KACnDG,EAAOR,EAAKS,iBAGlB,MAAM,GAAN,OAAUP,EAAV,YAAiBI,EAAjB,YAA0BE,G,wBCF9B,MAAME,EAAQ,CACZC,MAAM,wFACNC,MAAM,iFACNC,UAAU,yDACVC,KAAM,8EA6BR,EA1BsB,IAAqE,IAApE,GAACC,EAAD,KAAKC,EAAK,UAAV,MAAoBC,EAApB,KAA0BC,EAA1B,YAA+BC,EAA/B,OAA2CC,EAA3C,YAAkDC,GAAiB,EAExF,OACI,gBAAIxB,UAAU,YAAd,WACE,iBAAKA,UAAU,qBAAf,WACE,eAAIA,UAAU,iBAAd,SAAgCmB,KAChC,eAAGnB,UAAU,GAAGyB,MAAO,CAACC,QAAQ,OAAOC,WAAY,SAASC,IAAI,QAAhE,UAA0ER,GACtEG,IAAU,SAAC,IAAD,CAAMM,UAAS,GAAMX,GAAE,UAAaC,KAAK,UAAUW,MAAM,UAAUC,MAAM,KAAKC,OAAO,cAGrG,iBAAKhC,UAAU,qBAAf,WACE,cAAGA,UAAU,GAAb,SAAgB,8BAChB,eAAIA,UAAU,kBAAd,SAAiCa,EAAMQ,SAEzC,iBAAKrB,UAAU,qBAAf,WACE,iBAAKA,UAAU,GAAf,WACE,cAAGA,UAAU,QAAb,SAAqB,yHACrB,eAAIA,UAAU,kBAAd,SAAiE,eAAhCC,EAAgBqB,GAA+B,uCAAWrB,EAAgBqB,SAE7G,SAACW,EAAA,EAAD,CAAaC,SAAS,OAAOC,OAAO,UAAUL,MAAM,cAAcN,YAAa,IAAIA,EAAYN,Y,gEClBzG,MAyCA,EAzCkB,KAChB,MAAMkB,GAAWC,EAAAA,EAAAA,OACX,KAACC,EAAK,GAAN,UAASC,EAAT,QAAmBC,IAAWC,EAAAA,EAAAA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB1B,IACtBkB,GAASS,EAAAA,EAAAA,OACTH,EAAS,UAAD,OAAWxB,KASrB,OANA4B,EAAAA,EAAAA,YAAU,KACLR,GACDF,GAASW,EAAAA,EAAAA,IAAST,MAEpB,CAACA,EAAMF,KAGP,gCAEEG,IAAa,SAAC,KAAD,CACHS,SAAS,EACThB,OAAO,KACPD,MAAM,KACND,MAAM,UACNmB,OAAO,IACPC,UAAU,qBACVC,aAAc,GACdC,aAAY,yBAAoBb,EAAY,sBAAwB,MAG9EC,IAAW,wBAAI,6BACfF,IACE,SAAC,EAAD,UACGA,EAAKe,KAAI,QAAC,IAACC,EAAD,KAAKnC,EAAL,MAAUC,EAAV,KAAgBC,EAAhB,YAAqBC,EAArB,OAAiCC,GAAlC,SACR,SAAC,EAAD,CAA0BL,GAAIoC,EAAKnC,KAAMA,EAAMC,MAAOA,EAAOC,KAAMA,EAAME,OAAQA,EAAQD,YAAaA,EAAaE,YAAaoB,GAA5GU","sources":["components/List/List.jsx","helpers/convertDate.js","components/ListItemUsers/ListItemUsers.jsx","pages/UsersPage.js"],"sourcesContent":["// import {  useState } from 'react';\nimport './List.scss'\n\nconst List = ({children}) => {\n\n\n  return (\n    <ul className='list'>\n      {children}\n    </ul>\n  )\n  \n};\n\nexport default List;\n\n\n\n\n\n","export function convertIsoToDmy(isoStr) {\n    // Создаем объект Date из строки ISO\n    const date = new Date(isoStr);\n    \n    // Получаем день, месяц и год\n    const day = String(date.getUTCDate()).padStart(2, '0');\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // Месяцы в JS начинаются с 0\n    const year = date.getUTCFullYear();\n\n    // Форматируем в нужный формат\n    return `${day}.${month}.${year}`;\n}","// import {  useState } from 'react';\nimport { convertIsoToDmy } from 'helpers/convertDate';\nimport './ListItemUsers.scss'\nimport SmallButton from 'components/SmallButton/SmallButton';\nimport Icon from 'components/Icons/IconSprite';\n\n// import Icon from 'components/Icons/IconSprite';\n\nconst ROLES = {\n  owner:'Власник бізнесу',\n  admin:'Адміністратор',\n  moderator:'Модератор',\n  none: 'Не надано ролі'\n}\n\nconst ListItemUsers = ({id, name='NewUser',email,role,lastLogined,verify,handleClick}) => {\n\n  return (\n      <li className='list-item'>\n        <div className='users-item-content'>\n          <h3 className='user-item-name'>{name}</h3>\n          <p className='' style={{display:'flex',alignItems: 'center',gap:'12px'}}>{email} \n            {!verify && <Icon classlist={``} id={`warning`} name=\"warning\" color=\"#DD7A02\" width=\"24\" height=\"24\"/>}\n          </p>\n        </div>\n        <div className='users-item-content'>\n          <p className=''>Роль</p>\n          <h4 className='users-item-role'>{ROLES[role]}</h4>\n        </div>\n        <div className='users-item-content'>\n          <div className=''>\n            <p className='mb-12'>Останнє відвідування</p>\n            <h4 className='users-item-date'>{convertIsoToDmy(lastLogined)=== '01.01.1970' ? 'Ніколи' : convertIsoToDmy(lastLogined)}</h4>\n          </div>\n          <SmallButton iconName='dots' stroke='#171C1A' color='transparent' handleClick={()=>handleClick(id)}/>\n        </div>\n      </li>\n  )\n};\n\n\nexport default ListItemUsers;\n\n\n\n\n\n","// import { useSelector } from 'react-redux';\n// import { getToken } from 'redux/tokenSlice/tokenSlice';\n// import { Link} from 'react-router-dom';\n\nimport List from \"components/List/List\";\nimport ListItemUsers from \"components/ListItemUsers/ListItemUsers\";\nimport { useEffect } from \"react\";\nimport { ThreeDots } from \"react-loader-spinner\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { setUsers,clearEditedUser } from \"redux/users/usersSlice\";\nimport { useGetUsersQuery } from \"redux/usersAPI/usersAPI\";\n\n\n\nconst UsersPage = () => {\n  const dispatch = useDispatch()\n  const {data=[],isLoading,isError} = useGetUsersQuery()\n  const navigate = useNavigate()\n \n  const handleEditUser = (id) =>{\n    dispatch(clearEditedUser())\n    navigate(`/users/${id}`)\n  }\n  \n  useEffect(()=>{\n    if(data){\n      dispatch(setUsers(data))\n    }\n  },[data, dispatch])\n\n  return (\n    <>\n     {/* Users page       */}\n     {isLoading && <ThreeDots\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                color=\"#4fa94d\"\n                radius=\"9\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClass={`loader-overlay ${isLoading ? 'loader-overlay-show' : ''}`}\n                />\n      }\n     {isError && <h1>ErrorAPI !!! on UserPage</h1>}\n     {data && \n        <List>\n          {data.map(({_id,name,email,role,lastLogined,verify,})=> \n            <ListItemUsers key={_id}  id={_id} name={name} email={email} role={role} verify={verify} lastLogined={lastLogined} handleClick={handleEditUser}/> )}\n        </List>\n     }\n    </>\n  );\n};\n\nexport default UsersPage;\n"],"names":["children","className","convertIsoToDmy","isoStr","date","Date","day","String","getUTCDate","padStart","month","getUTCMonth","year","getUTCFullYear","ROLES","owner","admin","moderator","none","id","name","email","role","lastLogined","verify","handleClick","style","display","alignItems","gap","classlist","color","width","height","SmallButton","iconName","stroke","dispatch","useDispatch","data","isLoading","isError","useGetUsersQuery","navigate","useNavigate","handleEditUser","clearEditedUser","useEffect","setUsers","visible","radius","ariaLabel","wrapperStyle","wrapperClass","map","_id"],"sourceRoot":""}