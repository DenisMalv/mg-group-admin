{"version":3,"file":"static/js/256.6115f80c.chunk.js","mappings":"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","sources":["components/Input/Input.jsx","components/SelectBox/SelectBox.jsx","components/Modal/Modal.jsx","components/SecondButton/SecondButton.jsx","components/UserEditForm/UserEditForm.jsx","pages/UsersEditPage.js"],"sourcesContent":["import React,{ useRef } from 'react';\nimport './Input.scss'\n\nimport Icon from 'components/Icons/IconSprite';\n\nconst Input = ({title,classList,value='',name,type,handleChange,error,errorMessage})=>{\n\n    const input = useRef()\n\n    \n\n    // useEffect(()=>{\n    //     setTimeout(()=>{setIsShow(true)},20)\n    // },[])\n\n    return(\n            <label className={`input-lab ${classList}`} >\n                <span className='input-lab-text'>{title}</span>\n               \n                <div className={`input-wrap`}> \n\n                    <input value={value} onChange={handleChange} name={name} className={`form-input-iso ${error ? 'error' : ''}`} type={type}   ref={input} placeholder='Введіть імʼя'/>\n                    <Icon classlist={`form-input-ico ${error ? 'error' : ''}`} id={`warning`} name=\"warning\" color=\"#DD7A02\" width=\"24\" height=\"24\"/>\n                    <Icon classlist={`form-input-ico `} id={`arrow-correct`} name=\"arrow-correct\" color=\"transparent\" stroke='#333C38' width=\"24\" height=\"24\"/>\n                    {/* <p className={`form-error-message ${error ? 'error' : ''}`}>{errorMessage}</p> */}\n\n                    {/* {name ==='email' && <Icon classlist={`form-input-ico ${error[name] ? 'error' : 'hide'}`} id={`warning`} name=\"warning\" color=\"#DD7A02\" width=\"24\" height=\"24\"/>} */}\n                    {/* {name ==='password' && <Icon classlist={`form-input-icon ${error[name] ? 'error' : 'hide pass'}`} id={`warning`} name=\"eye-open\" stroke={`${error[name] ? \"#DD7A02\" : \"#73877B\"}`} color={`${error[name] ? \"#DD7A02\" : \"#73877B\"}`} width=\"24\" height=\"24\" onClick={handleShowPass}/>} */}\n\n                </div>\n                <p className={`form-error-message ${error ? 'error' : ''}`}>{errorMessage}</p>\n            </label>\n    )\n}\n\nexport default Input\n","import React,{ useRef,useState,useEffect } from 'react';\nimport './SelectBox.scss'\n\nimport Icon from 'components/Icons/IconSprite';\n\n\n\nconst SelectBox = ({ title, classList, value = '', name, type, handleChange, error, errorMessage, options }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(()=>options.find(el=>el.role===value)?.name);\n    const selectRef = useRef(null);\n  \n    const toggleDropdown = () => {\n      setIsOpen(!isOpen);\n    };\n  \n    const handleOptionClick = (el) => {\n      setSelectedValue(el.name);\n      handleChange({ target: { name:'role', value: el.role } });\n      setIsOpen(false);\n    };\n  \n    const handleClickOutside = (event) => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n  \n    useEffect(() => {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, []);\n  \n    return (\n        \n      <div className={`select-label ${classList}`} ref={selectRef}>\n        <p className='select-label-text'>{title}</p>\n  \n        <div className={`select-wrapper`} onClick={toggleDropdown}>\n          <input\n            value={selectedValue}\n            name={name}\n            className={`form-select-iso ${error ? 'error' : ''}`}\n            type={type}\n            readOnly\n          />\n          <Icon classlist={`form-select-icon ${isOpen ? 'open' : ''} ${error ? '' : 'show'}`} id={`select-arrow`} name=\"select-arrow\" color=\"transparent\" stroke='#333C38' width=\"24\" height=\"24\" />\n          <Icon classlist={`form-input-ico ${error ? 'error' : ''}`} id={`warning`} name=\"warning\" color=\"#DD7A02\" width=\"24\" height=\"24\"/>\n        </div>\n  \n        {isOpen && (\n          <ul className=\"select-options\">\n            {options.map((el, index) => (\n              <li\n                key={index}\n                className=\"select-option\"\n                onClick={() => handleOptionClick(el)}\n              >\n                {el.name}\n              </li>\n            ))}\n          </ul>\n        )}\n  \n        <span className={`select-error ${error ? 'error' : ''}`}>{errorMessage}</span>\n      </div>\n    );\n  };\n  \n  export default SelectBox;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nimport Icon from 'components/Icons/IconSprite';\n\nconst Modal = ({ show, showInstant, onClose, children, overlayRef }) => {\n  useEffect(() => {\n    if (show) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n    setTimeout(()=>overlayRef && overlayRef.current?.classList.toggle('modal-overlay-show'),4)\n    \n  }, [overlayRef, show]);\n\n  if (!show && !showInstant) return null;\n \n\n  return ReactDOM.createPortal(\n    <div className={`modal-overlay ${showInstant ? 'modal-overlay-show' : ''}`} onMouseUp={onClose} ref={overlayRef}>\n      <div className=\"modal-content br-24-to-20\" onMouseUp={e => e.stopPropagation()}>\n        <button className=\"modal-close\" onMouseUp={onClose}>\n            <Icon classlist={`step-four-icon-close`} id={`login-restore-close`} name=\"close\" stroke=\"#fff\" width=\"24\" height=\"24\"/>\n        </button>\n        {children}\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n};\n\nexport default Modal;","import React,{} from 'react';\nimport './SecondButton.scss'\n\n\n\nconst SecondButton = ({title,type, data, classList,handleClick, accent})=>{\n\n\n    // useEffect(()=>{\n    //     setTimeout(()=>{setIsShow(true)},20)\n    // },[])\n    \n\n    return(\n       accent\n        ? <button type={type} className={`second-button br-12 ${classList}`} onClick={handleClick} disabled={data && data.email === '' && data.password === ''}>\n        {title}\n        </button>\n        : <button type={type} className={`second-button-white br-12 ${classList}`}  onClick={handleClick} disabled={data && data.email === '' && data.password === ''}>\n        {title}\n        </button>    \n       \n    )\n}\n\nexport default SecondButton","\nimport { useRef, useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { getLogedUser } from 'redux/user/userSlice'\nimport './UserEditForm.scss'\n\nimport Input from 'components/Input/Input';\nimport SelectBox from 'components/SelectBox/SelectBox';\nimport Modal from 'components/Modal/Modal';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport Icon from 'components/Icons/IconSprite';\nimport iconCheck from '../../img/icons/Check.svg'\n\nimport { USER_ROLES } from 'data/constants';\nimport SecondButton from 'components/SecondButton/SecondButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useChangeUserEmailMutation, useChangeUserRoleMutation } from 'redux/usersAPI/usersAPI';\nimport { useDispatch } from 'react-redux';\nimport { clearEditedUser } from 'redux/users/usersSlice';\n\n\nconst UserEditForm = ({userData}) => {\n  // отримати залогіненого юзера \n  // const user = useSelector(getLogedUser)\n  // console.log(user)\n  const dispatch = useDispatch()\n  const modalOverlay = useRef(null)\n  const navigate = useNavigate()\n  const [newData,setNewData] = useState({\n    name:userData.name,\n    email:userData.email,\n    role:userData.role\n  })\n  const [newDataError,setNewDataError] = useState({\n    name:false,\n    email:false,\n    role:false,\n  })\n\n  const [changeRole, {isLoading:isLoadingRole,isSuccess:isSuccessRole}] = useChangeUserRoleMutation()\n  const [changeEmail,  {isError:isErrorEmail,isLoading:isLoadingEmail,isSuccess:isSuccessEmail}] = useChangeUserEmailMutation()\n  const [showModal, setShowModal] = useState(false);\n  \n\n  const handleOpenModal = () => setShowModal(true);\n  const handleCloseModal = () => {\n    modalOverlay && modalOverlay.current?.classList.toggle('modal-overlay-show')\n    setTimeout(()=>{\n      setShowModal(false)\n      dispatch(clearEditedUser())\n      navigate('/users')\n    },330)\n\n  };\n\n  const handleChange = (e)=>{\n    console.log(e.target.name)\n    setNewData({...newData,[e.target.name]:e.target.value})\n  }\n\n  const validate = () => {\n    const errors = {};\n    if (!newData.name) {\n      errors.name = true;\n    } else {\n      errors.name = false;\n    }\n    if (!newData.email || !/\\S+@\\S+\\.\\S+/.test(newData.email)) {\n      errors.email = true;\n    } else {\n      errors.email = false;\n    }\n    if (!newData.role || newData.role === 'none') {\n      errors.role = true;\n    } else {\n      errors.role = false;\n    }\n    setNewDataError(errors);\n    return Object.values(errors).every(error => !error);\n  };\n\n  const handleSubmit = async ()=>{\n    if (!validate()) {\n      return;\n    }\n\n    try{\n      await changeEmail({id:userData._id,email:newData.email}).unwrap()\n      await changeRole({id:userData._id,role:newData.role}).unwrap()\n      handleOpenModal()\n    }catch(error){\n      handleOpenModal()\n    }\n\n  }\n \n  return (<>\n          <form className='user-edit-form'>\n            <div className='user-edit-form-input-container '>\n              <Input value={newData.name} name='name' title='Імʼя' type='text' handleChange={handleChange} error={newDataError.name} errorMessage='Заповніть поле'/>\n              <Input value={newData.email} name='email' title='Email' type='text' handleChange={handleChange} error={newDataError.email}  errorMessage='Введіть корректний email'/>\n            </div>\n\n            <SelectBox title='Роль' handleChange={handleChange} value={newData.role} error={newDataError.role} errorMessage={'Оберіть роль'} placeholder={'Оберіть роль'} options={USER_ROLES}/>\n\n            <div className='user-edit-form-btn-wrapper gap-16-to-24'>\n              <SecondButton   title='Скасувати' type='button' classList='' handleClick={()=>{ dispatch(clearEditedUser()); navigate('/users')}}/>\n              <SecondButton   title='Зберегти' type='button' classList=''  handleClick={handleSubmit}  accent/>\n            </div>\n\n          </form>\n          {\n            (isLoadingEmail || isLoadingRole) &&\n                <ThreeDots\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                color=\"#4fa94d\"\n                radius=\"9\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClass={`loader-overlay ${(isLoadingEmail || isLoadingRole) ? 'loader-overlay-show' : ''}`}\n                />\n           }\n        \n    \n          <Modal show={showModal} onClose={handleCloseModal} overlayRef={modalOverlay}>\n            <h1 className='modal-header'>Вітаю!</h1>\n            <p>\n              {isSuccessEmail && isSuccessRole \n              ? 'Дані користувача оновлені' \n              : `Помилка при зміні ${isErrorEmail ? 'email' : 'ролі'} користувача`}\n            </p>\n            {isSuccessEmail && isSuccessRole \n              ? <img src={iconCheck} alt=\"icon-check\" />\n              : <Icon classlist={``} id={``} name=\"close\" stroke=\"#fff\" width=\"56\" height=\"56\" />\n            }\n          \n          </Modal>\n    </>\n  );\n};\n\nexport default UserEditForm;\n\n\n\n\n\n","// import { useSelector } from 'react-redux';\n// import { getToken } from 'redux/tokenSlice/tokenSlice';\n// import { Link} from 'react-router-dom';\n\nimport { ThreeDots } from \"react-loader-spinner\";\nimport UserEditForm from \"components/UserEditForm/UserEditForm\";\nimport { useParams } from \"react-router-dom\";\nimport { useGetUserByIdQuery } from \"redux/usersAPI/usersAPI\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setEditedUser } from \"redux/users/usersSlice\";\n\n\n\n\n\n\n\nconst UsersEditPage = () => {\n  const {id} = useParams()\n  const dispatch = useDispatch()\n  const {data,isLoading,isError} = useGetUserByIdQuery(id)\n\n  useEffect(()=>{\n    if(data && data.user){\n      dispatch(setEditedUser(data.user))\n    }\n  },[data, dispatch])\n\n  // console.log(data)\n\n  return (\n    <>\n     {/* Users page       */}\n     {isLoading && <ThreeDots\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                color=\"#4fa94d\"\n                radius=\"9\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClass={`loader-overlay ${isLoading ? 'loader-overlay-show' : ''}`}\n                />}\n     {isError && <h1>ErrorAPI !!! on UserEditPage</h1>}\n     {data && data.user &&\n        <UserEditForm userData={data.user} roles={''}/>\n     }\n    </>\n  );\n};\n\nexport default UsersEditPage;\n"],"names":["title","classList","value","name","type","handleChange","error","errorMessage","input","useRef","className","onChange","ref","placeholder","classlist","id","color","width","height","stroke","options","isOpen","setIsOpen","useState","selectedValue","setSelectedValue","find","el","role","selectRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","onClick","readOnly","map","index","handleOptionClick","show","showInstant","onClose","children","overlayRef","body","style","overflow","setTimeout","toggle","ReactDOM","onMouseUp","e","stopPropagation","getElementById","data","handleClick","accent","disabled","email","password","userData","dispatch","useDispatch","modalOverlay","navigate","useNavigate","newData","setNewData","newDataError","setNewDataError","changeRole","isLoading","isLoadingRole","isSuccess","isSuccessRole","useChangeUserRoleMutation","changeEmail","isError","isErrorEmail","isLoadingEmail","isSuccessEmail","useChangeUserEmailMutation","showModal","setShowModal","handleOpenModal","console","log","USER_ROLES","clearEditedUser","async","errors","test","Object","values","every","validate","_id","unwrap","visible","radius","ariaLabel","wrapperStyle","wrapperClass","src","iconCheck","alt","useParams","useGetUserByIdQuery","user","setEditedUser","roles"],"sourceRoot":""}